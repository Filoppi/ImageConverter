<Page x:Class="ImageConverter.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:common="using:ImageConverter.Common"
      xmlns:core="using:ImageConverter.Core"
      xmlns:cx="using:ImageConverter.Core.CX"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:i="using:Microsoft.Xaml.Interactivity"
      xmlns:local="using:ImageConverter"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
      xmlns:win1903="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 8)"
      d:DesignHeight="720"
      d:DesignWidth="1000"
      mc:Ignorable="d">

    <Page.Resources>
        <SolidColorBrush x:Name="BandedBrush"
                         Opacity="0.05"
                         Color="{ThemeResource SystemChromeAltLowColor}" />
        <SolidColorBrush x:Name="UnBandedBrush" Color="Transparent" />

        <Style BasedOn="{StaticResource ButtonRevealStyle}" TargetType="Button">
            <!--<Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />-->
        </Style>

        <Style TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
            <Setter Property="TabNavigation" Value="Local" />
            <Setter Property="IsHoldingEnabled" Value="True" />
            <Setter Property="Padding" Value="12 0 12 0" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}" />
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}" />
            <Setter Property="AllowDrop" Value="False" />
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
            <Setter Property="FocusVisualMargin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Grid x:Name="ContentBorder"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              Control.IsTemplateFocusTarget="True"
                              CornerRadius="{TemplateBinding CornerRadius}"
                              FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                              RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <ScaleTransform x:Name="ContentBorderScale" />
                            </Grid.RenderTransform>
                            <Rectangle x:Name="BorderBackground"
                                       Control.IsTemplateFocusTarget="True"
                                       Fill="{ThemeResource SystemControlHighlightListAccentLowBrush}"
                                       IsHitTestVisible="False"
                                       Opacity="0" />
                            <Grid x:Name="ContentPresenterGrid"
                                  Margin="0 0 0 0"
                                  Background="Transparent">
                                <Grid.RenderTransform>
                                    <TranslateTransform x:Name="ContentPresenterTranslateTransform" />
                                </Grid.RenderTransform>
                                <ContentPresenter x:Name="ContentPresenter"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  ContentTransitions="{TemplateBinding ContentTransitions}" />

                            </Grid>

                            <Border x:Name="MultiSelectSquare"
                                    Width="20"
                                    Height="20"
                                    Margin="12 0 0 0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    BorderBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                    BorderThickness="1"
                                    CornerRadius="2"
                                    Visibility="Collapsed">
                                <Border.Clip>
                                    <RectangleGeometry Rect="0,0,20,20">
                                        <RectangleGeometry.Transform>
                                            <TranslateTransform x:Name="MultiSelectClipTransform" />
                                        </RectangleGeometry.Transform>
                                    </RectangleGeometry>
                                </Border.Clip>
                                <Border.RenderTransform>
                                    <TranslateTransform x:Name="MultiSelectCheckBoxTransform" />
                                </Border.RenderTransform>
                                <FontIcon x:Name="MultiSelectCheck"
                                          FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                          FontSize="16"
                                          Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                          Glyph="&#xE73E;"
                                          Opacity="0"
                                          Visibility="Collapsed" />
                            </Border>

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">

                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="PointerOver">

                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BorderBackground"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1"
                                                             Duration="0" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Pressed">

                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BorderBackground"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1"
                                                             Duration="0" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Selected">

                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1"
                                                             Duration="0:0:0" />
                                            <DoubleAnimation Storyboard.TargetName="BorderBackground"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1"
                                                             Duration="0" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemAccentColor}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemAccentColor}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="White" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="PointerOverSelected">

                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1"
                                                             Duration="0:0:0" />
                                            <DoubleAnimation Storyboard.TargetName="BorderBackground"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1"
                                                             Duration="0" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentMediumBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemAccentColor}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="White" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="PressedSelected">

                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1"
                                                             Duration="0:0:0" />
                                            <DoubleAnimation Storyboard.TargetName="BorderBackground"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1"
                                                             Duration="0" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>

                                </VisualStateGroup>

                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled" />

                                    <VisualState x:Name="Disabled">

                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ContentBorder"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                                             Duration="0" />
                                        </Storyboard>
                                    </VisualState>

                                </VisualStateGroup>

                                <VisualStateGroup x:Name="MultiSelectStates">
                                    <VisualState x:Name="MultiSelectDisabled">

                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform" Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                                <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1"
                                                                      KeyTime="0:0:0.333"
                                                                      Value="-32" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform" Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                                <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1"
                                                                      KeyTime="0:0:0.333"
                                                                      Value="32" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32" />
                                                <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1"
                                                                      KeyTime="0:0:0.333"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.333" Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="MultiSelectEnabled">

                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform" Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32" />
                                                <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1"
                                                                      KeyTime="0:0:0.333"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform" Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32" />
                                                <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1"
                                                                      KeyTime="0:0:0.333"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32" />
                                                <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1"
                                                                      KeyTime="0:0:0.333"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterGrid" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="32,0,0,0" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="GhostButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{ThemeResource ButtonForeground}" />
            <Setter Property="BorderBrush" Value="{ThemeResource ButtonRevealBorderBrush}" />
            <Setter Property="BorderThickness" Value="{ThemeResource ButtonRevealBorderThemeThickness}" />
            <Setter Property="Padding" Value="{ThemeResource ButtonPadding}" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontWeight" Value="Normal" />
            <!--<Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />-->
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
            <Setter Property="FocusVisualMargin" Value="-3" />
            <Setter Property="CornerRadius" Value="2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid"
                              Background="{TemplateBinding Background}"
                              CornerRadius="{TemplateBinding CornerRadius}">
                            <ContentPresenter x:Name="ContentPresenter"
                                              Padding="{TemplateBinding Padding}"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              AutomationProperties.AccessibilityView="Raw"
                                              BorderBrush="{TemplateBinding BorderBrush}"
                                              BorderThickness="{TemplateBinding BorderThickness}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTransitions="{TemplateBinding ContentTransitions}"
                                              CornerRadius="{TemplateBinding CornerRadius}" />

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">

                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver" />
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonRevealBackgroundPointerOver}" />
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPointerOver}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPointerOver}" />
                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed" />
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonRevealBackgroundPressed}" />
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPressed}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPressed}" />
                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.Opacity" Value="0.4" />
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushDisabled}" />
                                        </VisualState.Setters>
                                    </VisualState>

                                </VisualStateGroup>

                            </VisualStateManager.VisualStateGroups>
                        </Grid>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="HeaderStyle" TargetType="ContentPresenter">
            <Setter Target="FontWeight" Value="Bold" />
        </Style>
    </Page.Resources>

    <Grid AllowDrop="True"
          DragOver="Files_DragOver"
          Drop="Files_Drop">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition x:Name="OutputGridColumn" Width="256" />
        </Grid.ColumnDefinitions>

        <!--  TITLE BAR  -->
        <Grid x:Name="TitleBar"
              Grid.ColumnSpan="2"
              Canvas.ZIndex="1">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="{x:Bind OutputGridColumn.Width, Mode=OneWay}" d:Width="256" />
            </Grid.ColumnDefinitions>

            <Border x:Name="TitleBarBackground"
                    Grid.ColumnSpan="2"
                    Background="Transparent" />

            <TextBlock Margin="14 36 0 0"
                       FontSize="24"
                       FontWeight="Bold"
                       IsHitTestVisible="False"
                       Text="Image Converter"
                       TextLineBounds="Tight"
                       TextTrimming="CharacterEllipsis" />

            <StackPanel Grid.Column="1"
                        Margin="0 0 0 -6"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        Orientation="Horizontal"
                        Spacing="4">

                <Button Click="{x:Bind ViewModel.FormatsClick}"
                        Style="{StaticResource GhostButtonStyle}"
                        ToolTipService.ToolTip="See supported formats">
                    <Grid>
                        <Image x:Name="AllFormatsImage"
                               x:Load="{x:Bind False(ViewModel.Support.IsMissingExtensions)}"
                               Width="20"
                               Height="20">
                            <Image.Source>
                                <SvgImageSource UriSource="/Assets/SupportedFiles.svg" />
                            </Image.Source>
                        </Image>
                        <Image x:Name="MissingFormatsImage"
                               x:Load="{x:Bind ViewModel.Support.IsMissingExtensions}"
                               Width="20"
                               Height="20">
                            <Image.Source>
                                <SvgImageSource UriSource="/Assets/MissingFormats.svg" />
                            </Image.Source>
                        </Image>
                    </Grid>
                </Button>

                <Button Click="{x:Bind ShowHelp}" Style="{StaticResource GhostButtonStyle}">
                    <Image Width="20" Height="20">
                        <Image.Source>
                            <SvgImageSource UriSource="/Assets/Help.svg" />
                        </Image.Source>
                    </Image>
                </Button>
            </StackPanel>



        </Grid>

        <!--  OUTPUT BACKGROUND  -->
        <Border x:Name="OutputBackground"
                Grid.RowSpan="10"
                Grid.Column="10">
            <Border.Background>
                <AcrylicBrush win1903:TintLuminosityOpacity="0.8"
                              BackgroundSource="HostBackdrop"
                              FallbackColor="{ThemeResource SystemChromeMediumColor}"
                              TintColor="{ThemeResource SystemAltHighColor}"
                              TintOpacity="0.8" />
            </Border.Background>
        </Border>

        <!--  INPUT BACKGROUND  -->
        <Border x:Name="InputBackground"
                Grid.RowSpan="10"
                Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" />

        <!--  WARNING ROW  -->
        <StackPanel Grid.Row="1" Margin="0 12 0 0">
            <common:InfoBar IsCloseButtonVisible="True" Visibility="{x:Bind FalseToVis(ViewModel.Support.HasHEIFImageExtensions)}">
                <common:InfoBar.Icon>
                    <PathIcon Margin="0 0 12 0"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="F1 M 2.021484 18.59375 C 1.695964 18.59375 1.391602 18.515625 1.108398 18.359375 C 0.825195 18.203125 0.598958 17.985025 0.429688 17.705078 C 0.240885 17.399088 0.146484 17.067057 0.146484 16.708984 C 0.146484 16.409506 0.211589 16.132812 0.341797 15.878906 L 7.695312 1.171875 C 7.858072 0.852865 8.089192 0.600586 8.388672 0.415039 C 8.68815 0.229492 9.016927 0.136719 9.375 0.136719 C 9.733072 0.136719 10.061849 0.229492 10.361328 0.415039 C 10.660807 0.600586 10.891927 0.852865 11.054688 1.171875 L 18.408203 15.878906 C 18.53841 16.132812 18.603516 16.409506 18.603516 16.708984 C 18.603516 17.067057 18.509113 17.399088 18.320312 17.705078 C 18.151041 17.985025 17.924805 18.203125 17.641602 18.359375 C 17.358398 18.515625 17.054035 18.59375 16.728516 18.59375 Z M 16.728516 17.34375 C 16.865234 17.34375 16.977539 17.311197 17.06543 17.246094 C 17.15332 17.18099 17.216797 17.115885 17.255859 17.050781 C 17.320963 16.953125 17.353516 16.842447 17.353516 16.71875 C 17.353516 16.621094 17.330729 16.526693 17.285156 16.435547 L 9.931641 1.738281 C 9.879557 1.627605 9.804688 1.541342 9.707031 1.479492 C 9.609375 1.417645 9.498697 1.386719 9.375 1.386719 C 9.251302 1.386719 9.140625 1.417645 9.042969 1.479492 C 8.945312 1.541342 8.870442 1.627605 8.818359 1.738281 L 1.464844 16.435547 C 1.419271 16.526693 1.396484 16.621094 1.396484 16.71875 C 1.396484 16.842447 1.429036 16.953125 1.494141 17.050781 C 1.533203 17.115885 1.59668 17.18099 1.68457 17.246094 C 1.772461 17.311197 1.884766 17.34375 2.021484 17.34375 Z M 9.375 12.5 C 9.205729 12.5 9.059244 12.438151 8.935547 12.314453 C 8.811849 12.190756 8.75 12.044271 8.75 11.875 L 8.75 6.875 C 8.75 6.705729 8.811849 6.559245 8.935547 6.435547 C 9.059244 6.31185 9.205729 6.25 9.375 6.25 C 9.544271 6.25 9.690755 6.31185 9.814453 6.435547 C 9.93815 6.559245 10 6.705729 10 6.875 L 10 11.875 C 10 12.044271 9.93815 12.190756 9.814453 12.314453 C 9.690755 12.438151 9.544271 12.5 9.375 12.5 Z M 9.375 15.3125 C 9.114583 15.3125 8.893229 15.221354 8.710938 15.039062 C 8.528646 14.856771 8.4375 14.635417 8.4375 14.375 C 8.4375 14.114584 8.528646 13.893229 8.710938 13.710938 C 8.893229 13.528646 9.114583 13.4375 9.375 13.4375 C 9.635416 13.4375 9.856771 13.528646 10.039062 13.710938 C 10.221354 13.893229 10.3125 14.114584 10.3125 14.375 C 10.3125 14.635417 10.221354 14.856771 10.039062 15.039062 C 9.856771 15.221354 9.635416 15.3125 9.375 15.3125 Z " />
                </common:InfoBar.Icon>
                <TextBlock VerticalAlignment="Center"
                           Foreground="White"
                           TextWrapping="Wrap">
                    <Run Text="To convert HEIC files, you need the" />
                    <Hyperlink Foreground="White" NavigateUri="{x:Bind cx:CodecSupport.HEIFImageExtensionsWebLink}">HEIF Image Extensions from the Microsoft Store.</Hyperlink>
                    <Run Text="Restart the app after installing." />
                </TextBlock>
            </common:InfoBar>


        </StackPanel>

        <!--  INPUT COLUMN  -->
        <Grid x:Name="InputContainer" Grid.Row="2">
            <Grid.Transitions>
                <TransitionCollection>
                    <RepositionThemeTransition />
                </TransitionCollection>
            </Grid.Transitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!--  INPUT ROW  -->
            <Grid Margin="4 14 0 4" ColumnSpacing="8">
                <CommandBar HorizontalAlignment="Left"
                            Background="Transparent"
                            DefaultLabelPosition="Right"
                            IsOpen="False"
                            OverflowButtonVisibility="Auto">
                    <AppBarButton x:Name="AddFilesButton"
                                  Grid.Column="0"
                                  Click="{x:Bind ViewModel.AddFilesClick}"
                                  Icon="Add"
                                  IsEnabled="{x:Bind False(ViewModel.IsBusy), Mode=OneWay}"
                                  Label="Add Images" />
                    <AppBarButton Click="{x:Bind ViewModel.RemoveFilesClick}"
                                  Icon="Remove"
                                  IsEnabled="{x:Bind TrueAndFalse(ViewModel.HasSelectedItems, ViewModel.IsBusy), Mode=OneWay}"
                                  Label="Remove Images" />
                    <AppBarButton Click="{x:Bind ViewModel.ClearClick}"
                                  Icon="Delete"
                                  IsEnabled="{x:Bind TrueAndFalse(ViewModel.HasItems, ViewModel.IsBusy), Mode=OneWay}"
                                  Label="Clear All" />
                </CommandBar>
            </Grid>

            <!--  FILES VIEW  -->
            <Grid Grid.Row="1">

                <ListView x:Name="FilesList"
                          Margin="0 0 0 0"
                          Padding="0 12 0 40"
                          Background="Transparent"
                          ContainerContentChanging="FilesList_ContainerContentChanging"
                          IsEnabled="{x:Bind False(ViewModel.IsBusy), Mode=OneWay}"
                          ItemsSource="{x:Bind ViewModel.FileList}"
                          SelectionMode="Multiple">
                    <i:Interaction.Behaviors>
                        <common:ListViewBaseItemsSelectionBehavior SelectedItems="{x:Bind ViewModel.SelectedFiles}" />
                    </i:Interaction.Behaviors>
                    <ListView.ItemContainerTransitions>
                        <TransitionCollection>
                            <EntranceThemeTransition FromHorizontalOffset="0"
                                                     FromVerticalOffset="200"
                                                     IsStaggeringEnabled="True" />
                            <AddDeleteThemeTransition />
                            <ContentThemeTransition />
                        </TransitionCollection>
                    </ListView.ItemContainerTransitions>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="common:ImageViewModel">
                            <StackPanel>
                                <Grid Padding="0 0 12 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="10" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <StackPanel>
                                        <TextBlock FontSize="13"
                                                   Text="{x:Bind File.Name}"
                                                   ToolTipService.ToolTip="{x:Bind File.Path}" />
                                        <TextBlock FontSize="13"
                                                   Foreground="{ThemeResource TextControlPlaceholderForeground}"
                                                   Text="{x:Bind ExtendedStatus, Mode=OneWay}"
                                                   Visibility="{x:Bind local:MainPage.NullOrEmptyToVis(ExtendedStatus), Mode=OneWay, FallbackValue=Collapsed}" />
                                    </StackPanel>

                                    <TextBlock Grid.Column="2"
                                               Margin="10 0"
                                               VerticalAlignment="Center"
                                               FontSize="13"
                                               Foreground="{ThemeResource TextControlPlaceholderForeground}"
                                               Text="{x:Bind Status, Mode=OneWay}"
                                               ToolTipService.ToolTip="{x:Bind ExtendedStatus, Mode=OneWay}" />
                                    <TextBlock Grid.Column="3"
                                               VerticalAlignment="Center"
                                               FontSize="13"
                                               Foreground="{ThemeResource TextControlPlaceholderForeground}"
                                               Text="{x:Bind Size}" />
                                </Grid>

                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <TextBlock x:Name="HintBlock"
                           Margin="24"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontSize="32"
                           FontWeight="Bold"
                           Opacity="0.4"
                           Tapped="{x:Bind FocusAddFiles}"
                           TextAlignment="Center"
                           TextTrimming="CharacterEllipsis"
                           TextWrapping="Wrap"
                           Visibility="{x:Bind FalseToVis(ViewModel.HasItems), Mode=OneWay, FallbackValue=Collapsed}">
                    <Run Text="Use the" />
                    <Run FontFamily="{ThemeResource SymbolThemeFontFamily}"
                         FontSize="22"
                         Text="&#xE109;" />
                    <Run FontWeight="Light" Text="Add Images" />
                    <Run Text="button above or drag and drop files here to get started" />
                </TextBlock>

                <ScrollViewer VerticalAlignment="Bottom" Visibility="{x:Bind FalseToVis(ViewModel.HasItems), Mode=OneWay}" />

                <ProgressRing x:Name="ProcessingRing"
                              x:Load="{x:Bind ViewModel.IsProcessing, Mode=OneWay}"
                              Grid.Row="3"
                              Width="50"
                              Height="50"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Foreground="{ThemeResource SystemAccentColor}"
                              IsActive="True" />
            </Grid>

        </Grid>

        <!--  OUTPUT COLUMN  -->
        <Grid x:Name="OutputContainer"
              Grid.Row="1"
              Grid.RowSpan="4"
              Grid.Column="1">

            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />

            </Grid.RowDefinitions>

            <ScrollViewer Padding="12 8 12 0">
                <StackPanel Margin="0 0 0 12" Spacing="24">
                    <StackPanel>
                        <TextBlock Margin="0 0 0 4"
                                   FontSize="12"
                                   FontWeight="SemiBold"
                                   Opacity="0.7"
                                   Text="OUTPUT FOLDER" />

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button x:Name="OutputFolderButton"
                                    MinHeight="32"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Bottom"
                                    HorizontalContentAlignment="Left"
                                    AllowDrop="False"
                                    Click="{x:Bind ViewModel.DestinationClick}"
                                    Content="{x:Bind ViewModel.ExportFolder.Path, FallbackValue='Click to choose', TargetNullValue='Click to choose', Mode=OneWay}"
                                    CornerRadius="2 0 0 2"
                                    DragOver="Output_DragOver"
                                    Drop="Output_Drop"
                                    IsEnabled="{x:Bind False(ViewModel.IsBusy), Mode=OneWay}"
                                    ToolTipService.ToolTip="{Binding Content, RelativeSource={RelativeSource Mode=Self}}" />

                            <Button x:Name="SecondaryButton"
                                    Grid.Column="1"
                                    Width="32"
                                    MinHeight="32"
                                    Padding="0 0 8 0"
                                    VerticalAlignment="Stretch"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    CornerRadius="0 2 2 0"
                                    IsEnabled="{x:Bind False(ViewModel.IsBusy), Mode=OneWay}"
                                    IsTextScaleFactorEnabled="False">
                                <Button.Flyout>
                                    <MenuFlyout Placement="Bottom">
                                        <MenuFlyoutItem Click="{x:Bind ViewModel.OpenExportFolderClick}"
                                                        FontSize="{StaticResource DefaultFontSize}"
                                                        IsEnabled="{x:Bind ViewModel.HasExportFolder, Mode=OneWay}"
                                                        Text="Open in File Explorer" />
                                        <MenuFlyoutSubItem FontSize="{StaticResource DefaultFontSize}" Text="Output Folder File Options">
                                            <ToggleMenuFlyoutItem FontSize="{StaticResource DefaultFontSize}"
                                                                  IsChecked="{x:Bind False(ViewModel.IsOverwrite), BindBack=ViewModel.SetNewName, Mode=TwoWay}"
                                                                  Text="Generate new name if already exists" />
                                            <ToggleMenuFlyoutItem FontSize="{StaticResource DefaultFontSize}"
                                                                  IsChecked="{x:Bind ViewModel.IsOverwrite, Mode=TwoWay}"
                                                                  Text="Overwrite Existing" />
                                        </MenuFlyoutSubItem>
                                    </MenuFlyout>
                                </Button.Flyout>
                                <Button.Content>
                                    <TextBlock x:Name="ChevronTextBlock"
                                               HorizontalAlignment="Right"
                                               VerticalAlignment="Center"
                                               AutomationProperties.AccessibilityView="Raw"
                                               FontFamily="Segoe MDL2 Assets"
                                               FontSize="12"
                                               Text="&#xE70D;" />
                                </Button.Content>
                            </Button>
                        </Grid>


                    </StackPanel>

                    <StackPanel>
                        <TextBlock Margin="0 0 0 4"
                                   FontSize="12"
                                   FontWeight="SemiBold"
                                   Opacity="0.7"
                                   Text="OUTPUT FORMAT" />

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <ComboBox x:Name="OutputFormatSelector"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch"
                                      VerticalContentAlignment="Center"
                                      CornerRadius="2 0 0 2"
                                      IsEnabled="{x:Bind False(ViewModel.IsBusy), Mode=OneWay}"
                                      ItemsSource="{x:Bind ViewModel.ImageFormats}"
                                      SelectedItem="{x:Bind ViewModel.SelectedFormat, Mode=TwoWay}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate x:DataType="core:ImageFormat">
                                        <TextBlock Text="{x:Bind DisplayName}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>

                            <Button x:Name="OutputFormatOptionsButton"
                                    Grid.Column="1"
                                    MinHeight="32"
                                    VerticalAlignment="Stretch"
                                    Click="{x:Bind ViewModel.OptionsClick}"
                                    CornerRadius=" 0 2 2 0"
                                    IsEnabled="{x:Bind TrueAndFalse(ViewModel.HasOptions, ViewModel.IsBusy), Mode=OneWay}">
                                <SymbolIcon Margin="-4"
                                            RenderTransformOrigin="0.5 0.5"
                                            Symbol="Setting">
                                    <SymbolIcon.RenderTransform>
                                        <CompositeTransform ScaleX="0.6" ScaleY="0.6" />
                                    </SymbolIcon.RenderTransform>
                                </SymbolIcon>
                            </Button>
                        </Grid>
                    </StackPanel>

                    <Button x:Name="ResizeOptionsButton"
                            Grid.Column="4"
                            MinHeight="32"
                            HorizontalAlignment="Stretch"
                            Click="{x:Bind ViewModel.TransformClick}"
                            IsEnabled="{x:Bind False(ViewModel.IsBusy), Mode=OneWay}">
                        Configure Resizing
                    </Button>

                    <StackPanel Margin="0 -4 0 0" Spacing="8">
                        <StackPanel.Resources>
                            <Style BasedOn="{StaticResource DefaultCheckBoxStyle}" TargetType="CheckBox">
                                <Setter Property="Padding" Value="8 0" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="Padding" Value="8 0" />
                                <Setter Property="HorizontalAlignment" Value="Stretch" />
                            </Style>
                        </StackPanel.Resources>

                        <CheckBox Content="Copy metadata"
                                  IsChecked="{x:Bind ViewModel.CopyMetadata, Mode=TwoWay}"
                                  IsEnabled="{x:Bind False(ViewModel.IsBusy), Mode=OneWay}">
                            <ToolTipService.ToolTip>
                                When enabled, metadata containers like GPS Location, EXIF, XMP and IFD are copied to the output images.
                                This can include information like Camera Model, GPS location the photo was taken at and more.
                            </ToolTipService.ToolTip>
                        </CheckBox>
                        <CheckBox Content="Export multi-frame images"
                                  IsChecked="{x:Bind ViewModel.MultiframeSupport, Mode=TwoWay}"
                                  IsEnabled="{x:Bind False(ViewModel.IsBusy), Mode=OneWay}">
                            <ToolTipService.ToolTip>
                                When enabled, images that contain multiple frames (like TIFF or DDS) will have each frame converted to a separate file.
                                If disabled, only the first frame of each image will be converted.
                            </ToolTipService.ToolTip>
                        </CheckBox>
                    </StackPanel>



                </StackPanel>
            </ScrollViewer>

            <StackPanel Grid.Row="1"
                        Padding="12"
                        Spacing="12">
                <Border Margin="-12 0"
                        Padding="12 6 12 10"
                        Background="{ThemeResource SystemColorControlAccentBrush}"
                        Visibility="{x:Bind FalseToVis(ViewModel.HasExportFolder), Mode=OneWay}">
                    <TextBlock FontSize="12.333"
                               FontWeight="Bold"
                               Foreground="White"
                               TextWrapping="Wrap">
                        Please choose an output folder above before converting.
                    </TextBlock>
                </Border>

                <Button MinHeight="32"
                        HorizontalAlignment="Stretch"
                        Background="{ThemeResource SystemControlHighlightBaseMediumLowRevealAccentBackgroundBrush}"
                        Click="{x:Bind ViewModel.ConvertClick}"
                        Content="Convert All Images"
                        Foreground="{ThemeResource AccentButtonForeground}"
                        IsEnabled="{x:Bind TrueAndTrueAndFalse(ViewModel.HasItems, ViewModel.HasExportFolder, ViewModel.IsBusy), Mode=OneWay}" />

            </StackPanel>
        </Grid>

        <!--  HELP  -->
        <muxc:TeachingTip x:Name="HelpToolTip"
                          Title="Help"
                          Grid.Row="1"
                          Grid.RowSpan="2"
                          d:IsHidden="True"
                          PreferredPlacement="BottomLeft">
            <TextBlock FontSize="13"
                       Foreground="{ThemeResource TextControlPlaceholderForeground}"
                       TextWrapping="Wrap">
                <Run Text="To get started: " />
                <LineBreak /><Run Text=" 1. Click the" /> <Hyperlink Click="{x:Bind FocusAddFiles}">Add Files</Hyperlink> <Run Text="button above to add files." />
                <LineBreak /><Run Text=" 2. Choose the" /> <Hyperlink Click="FocusOutputFolder">Output folder</Hyperlink> <Run Text="from the panel on the left." />
                <LineBreak /><Run Text=" 3. Choose your" /> <Hyperlink Click="FocusOutputFormat">Output format</Hyperlink> <Run Text="and" /> <Hyperlink Click="FocusFormatOptions">options.</Hyperlink>
                <LineBreak /><Run Text=" 4. Optionally, choose if you want to" /> <Hyperlink Click="FocusResize">resize images.</Hyperlink>
                <LineBreak /><Run Text=" 5. Press Convert!" />
            </TextBlock>
        </muxc:TeachingTip>

        <!--  STATUS BAR  -->
        <Border Grid.Row="3">
            <Grid MinHeight="24"
                  Padding="12 0"
                  ColumnSpacing="12">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock VerticalAlignment="Center"
                           FontWeight="SemiBold"
                           Text="{x:Bind ViewModel.StatusBarLeft, Mode=OneWay}"
                           TextLineBounds="Tight" />
                <TextBlock Grid.Column="1"
                           VerticalAlignment="Center"
                           FontWeight="SemiBold"
                           Text="{x:Bind ViewModel.StatusBarRight, Mode=OneWay}"
                           TextAlignment="Right"
                           TextLineBounds="Tight" />
            </Grid>
        </Border>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveSizeStates">
                <VisualState x:Name="DefaultSizeState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="CompactSizeState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="OutputGridColumn.Width" Value="200" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind HintBlock.IsTextTrimmed, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HintBlock.(ToolTipService.ToolTip)" Value="Use the + Add Files button above or drag and drop files here to get started" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
